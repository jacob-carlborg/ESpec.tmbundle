<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>spec.exs</string>
	</array>
	<key>firstLineMatch</key>
	<string>.*spec_helper.*</string>
	<key>keyEquivalent</key>
	<string>^~E</string>
	<key>name</key>
	<string>ESpec</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>match</key>
			<string>(?&lt;!\.)\b(before|finally|around|background)\b(?![?!])</string>
			<key>name</key>
			<string>keyword.other.elixir</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#behaviour</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#single-line-example</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#pending</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#example</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#behaviour-with-multiline-desc</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#example-with-multiline-desc</string>
		</dict>
		<dict>
			<key>include</key>
			<string>source.elixir</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>behaviour</key>
		<dict>
			<key>begin</key>
			<string>^\s*([fx]?(?:describe|context|example_group))\b(?=.*\bdo\s*$)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.elixir.behaviour</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Begin regexp must not match pending behaviors (see https://github.com/rspec/rspec-tmbundle/issues/31).</string>
			<key>end</key>
			<string>\b(do)\s*$</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.control.elixir.start-block</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.elixir.behaviour</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>source.elixir</string>
				</dict>
			</array>
		</dict>
		<key>behaviour-with-multiline-desc</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.elixir.behaviour</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Behaviours with multiline descriptions are not matched by `behaviour`, so as a fallback we just highlight the bare keywords</string>
			<key>match</key>
			<string>^\s*([fx]?(?:describe|context|example_group))\b</string>
			<key>name</key>
			<string>meta.elixir.behaviour</string>
		</dict>
		<key>example</key>
		<dict>
			<key>begin</key>
			<string>^\s*([fx]?(?:it|specify|example))\b(?=.*\bdo\s*$)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.elixir.example</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Begin regexp must not match pending behaviors (see https://github.com/rspec/rspec-tmbundle/issues/31).</string>
			<key>end</key>
			<string>\b(do)\s*$</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.control.elixir.start-block</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.elixir.example</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>source.elixir</string>
				</dict>
			</array>
		</dict>
		<key>example-with-multiline-desc</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.elixir.example</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Examples with multiline descriptions are not matched by `behavior`, so as a fallback we just highlight the bare keywords</string>
			<key>match</key>
			<string>^\s*([fx]?(?:it|specify|example))\b</string>
			<key>name</key>
			<string>meta.elixir.example</string>
		</dict>
		<key>pending</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.elixir.pending</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>string.elixir</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>This only works with simple single / double quoted strings. But matching too liberally causes bugs (see https://github.com/rspec/rspec-tmbundle/issues/45), so better err on the safe side.</string>
			<key>match</key>
			<string>^\s*([fx]?(?:it|specify|example|describe|context|example_group))\s+("[^"]*"|'[^']*')(?&lt;!do)\s*$</string>
			<key>name</key>
			<string>meta.elixir.pending</string>
		</dict>
		<key>single-line-example</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.elixir.example</string>
				</dict>
			</dict>
			<key>match</key>
			<string>^\s*([fx]?(?:it|specify|example))\s*{</string>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.elixir.espec</string>
	<key>uuid</key>
	<string>694164CF-06B1-4C58-947F-41C9337C68BD</string>
</dict>
</plist>
